---
title: <b> "Count Bars" </b>
author: "Igor Galankov"
date: '`r Sys.time()`'
output: html_document

--- 

```{r setup, cache = F, echo = F, message = F, warning = F, tidy = F, results='hide'} 
require(rFdk)
ttConnect()
if(!require("tibble")){
install.packages("tibble", repos = "http://cran.us.r-project.org", dependencies = TRUE) 
library(tibble)
}
if(!require("plotly")){
install.packages("plotly", repos = "http://cran.us.r-project.org", dependencies = TRUE) 
library(plotly)
}
if(!require("DT")){
install.packages("DT", repos = "http://cran.us.r-project.org", dependencies = TRUE) 
library(DT)
}
if(!require("lubridate")){
install.packages("lubridate", repos = "http://cran.us.r-project.org", dependencies = TRUE) 
library(lubridate)
}

if(!require("stats")){
install.packages("stats", repos = "http://cran.us.r-project.org", dependencies = TRUE) 
library(stats)
}
ttDisconnect()

```


```{r echo=F, results='hide'}

#symbol <- "EURUSD"  
server <- "tp.st.soft-fx.eu"

ttConnect(server,"1","123qwe!")

result <- data.frame(symbol = character(), periodicity = character(), countAsk = character(), volumeAsk = character(),  countBid = character(), volumeBid = character())

#for (period in c("S1", "S10", "M1", "M5", "M15", "M30", "H1", "H4", "D1", "W1", "MN1")) 

startTime <- as.POSIXct(0, origin=ISOdatetime(2015,01,01,3,00,00)) 
endTime <- as.POSIXct(0, origin=ISOdatetime(2015,06,03,3,00,00)) 
 
#for (symbol in c("EURUSD", "USDSEK", "BTCUSD", "#J225", "XAGUSD", "BTCUSD_L", "#AUS200", "NOKSEK")) 
for (symbol in c("BTCUSD_L","#J225")) 
{ 

for (period in c("S1", "S10", "M1", "M5", "M15", "M30", "H1", "H4", "D1", "W1", "MN1"))  
# for (period in c("M1"))
  { 
 countBarAsk = 0 
 countBarBid = 0
 
 sumVolumeAsk = 0
 sumVolumeBid = 0
 
 #get Bars history by "Bid" 
 barBid<-ttFeed.BarHistory(symbol, "Bid", period, startTime, endTime) 
# get Bars history by "Ask" 
 barAsk<-ttFeed.BarHistory(symbol, "Ask", period, startTime, endTime) 
 
 # Calculating amount of AskBars 
  countBarAsk =  nrow(barAsk) 
  sumVolumeAsk = sum(barAsk$volume)
  
 # Calculating amount of BidBars 
  countBarBid = nrow(barBid) 
  sumVolumeBid = sum(barBid$volume)
  
  result <- rbind(result, data.frame(symbol = symbol, periodicity = period, countAsk = countBarAsk, volumeAsk = sumVolumeAsk, countBid = countBarBid, volumeBid = sumVolumeBid))
}
}
```


Server: `r server ` <br>
Period: from : `r startTime ` to `r endTime ` <br>
<br>

```{r echo=F} 
datatable(result) 
``` 


